# Generate graph and put image in RailsRoot/graphs/platform_slug
# Each image is named by the graph id
# a thumbnail image is generated by RMagick and placed in the same directory
class GraphProcessor
  include RvgGraph
  include Magick
  @queue = :graph_processor

  def self.perform(group_id, graph_id, starts_at, ends_at, output_name)
    #Bundler.require :processing
    group = Group.find(group_id)
    platform = group.platforms.first
    graph = group.graphs.find(graph_id)
    template = Psych.load(graph.config)

    status = group.status.build(system: "graphs", message: "Building graph image for #{graph.name}.", status: "Running", start_time: DateTime.now)
    puts "Creating Graph, output to #{output_name}"

    # Build data hash for graph
      data_hash = Hash.new
    data_hash["date"] = Array.new

    template["data"].each do |tdata|
      case tdata["collection"]
      when "raw"
        data = platform.raw_data.captured_between(starts_at, ends_at).all
      when "processed"
        data = group.processed_data.captured_between(starts_at, ends_at).all
      end

      fields = tdata["name"].split(",")

      data.each do |row|
        fields.each do |field|
          data_hash[field] ||= []
          data_hash[field] << row[field.to_sym].to_f
        end
        data_hash['date'] ||= []
        data_hash['date'] << row[:capture_date]
      end
    end

    rvg_graph = Graph.new(graph.config, data_hash, platform.no_data_value)

    rvg_graph.draw
    rvg_graph.save(output_name)

    status.update_attributes(status: "Finished", end_time: DateTime.now)
  end
end