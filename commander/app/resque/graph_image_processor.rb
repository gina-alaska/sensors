# Generate graph and put image in RailsRoot/graphs/platform_slug
# Each image is named by the graph id
# a thumbnail image is generated by RMagick and placed in the same directory
class GraphImageProcessor
  include RvgGraph
  include Magick
  @queue = :graph_image

  def self.perform(slug, graph_id)
    # Smarter dates
    platform = Platform.where(slug: slug).first
    ends_at = platform.raw_data.last.capture_date
    starts_at = ends_at-eval(platform.graph_length)

    path = File.join('graphs', slug)
    unless File.exists?(path)
      Dir.mkdir(path)
    end
    file = File.join(path, "#{graph_id}.jpg")
    puts "Creating Graph, output to #{file}"

    newgraph = Ginagraph.new(slug, graph_id, starts_at, ends_at)
    newgraph.draw_data(newgraph.template["graph_data"]) if newgraph.template["graph_data"]
    newgraph.draw_border(newgraph.template["border"]) if newgraph.template["border"]
    newgraph.draw_title if newgraph.template["graph"]["title"]
    newgraph.save(file)
    thumbfile = File.join(path, "#{graph_id}_thumb.jpg")
    img = Image.read(file).first
    thumb = img.resize_to_fit(200)
    thumb.write(thumbfile)

    # update the database graph image paths
    graph = platform.graphs.find(graph_id)
    graph.update_attributes(image_path: file, thumb_path: thumbfile)

    puts "Done!"
  end
end